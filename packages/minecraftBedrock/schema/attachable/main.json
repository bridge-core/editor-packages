{
	"$schema": "http://json-schema.org/draft-07/schema",
	"title": "Attachable",
	"required": ["format_version", "minecraft:attachable"],
	"additionalProperties": false,
	"type": "object",
	"properties": {
		"format_version": {
			"title": "Format Version",
			"$ref": "../project/formatVersionEnum.json"
		},
		"minecraft:attachable": {
			"title": "Attachable Definition",
			"additionalProperties": false,
			"required": ["description"],
			"type": "object",
			"properties": {
				"description": {
					"title": "Description",
					"required": [
						"textures",
						"geometry",
						"render_controllers",
						"identifier",
						"materials"
					],
					"additionalProperties": false,
					"type": "object",
					"properties": {
						"identifier": {
							"title": "Identifier",
							"$ref": "../general/reference/prefixedFileIdentifier.json"
						},
						"item": {
							"title": "Item",
							"description": "Sets an item identifier with a Molang script to decide when to render the attachable.",
							"anyOf": [
								{
									"type": "object",
									"propertyNames": {
										"$ref": "../general/reference/identifiers.json#/definitions/item_identifiers"
									},
									"patternProperties": {
										".+": {
											"$ref": "../molang/embedded.json"
										}
									}
								},
								{
									"type": "string",
									"$ref": "../general/reference/identifiers.json#/definitions/item_identifiers"
								}
							]
						},
						"materials": {
							"title": "Materials",
							"description": "Defines the materials used in the attachable.",
							"type": "object",
							"patternProperties": {
								".*": {
									"$ref": "../general/vanilla/material.json"
								}
							}
						},
						"textures": {
							"title": "Textures",
							"description": "Defines the textures used in the attachable.",
							"type": "object",
							"patternProperties": {
								".*": {
									"$ref": "../general/reference/paths.json#/definitions/entity_texture_paths"
								}
							}
						},
						"geometry": {
							"title": "Geometry",
							"description": "Defines the geometries used in the attachable.",
							"patternProperties": {
								".*": {
									"$ref": "../general/reference/geometry.json"
								}
							}
						},
						"queryable_geometry": {
							"title": "Queryable Geometry",
							"$ref": "../general/reference/geometry.json"
						},
						"scripts": {
							"title": "Scripts",
							"additionalProperties": false,
							"type": "object",
							"properties": {
								"parent_setup": {
									"title": "Parent Setup",
									"description": "Sets up the parent bone for the attachable.",
									"type": "string"
								},
								"pre_animation": {
									"title": "Pre Animation",
									"description": "Pre-computes any expensive and complex values you may want to reuse in your scripts, long-living index variable updates, or generally any one-off computation per render tick.",
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"animate": {
									"title": "Animate",
									"type": "array",
									"items": {
										"anyOf": [
											{
												"type": "object",
												"propertyNames": {
													"$ref": "./dynamic/currentContext/animationReferenceEnum.json"
												},
												"patternProperties": {
													".*": {
														"$ref": "../molang/embedded.json"
													}
												}
											},
											{
												"type": "string",
												"$ref": "./dynamic/currentContext/animationReferenceEnum.json"
											}
										]
									}
								},
								"should_update_bones_and_effects_offscreen": {
									"title": "Should Update Bones And Effects Offscreen",
									"description": "Bones and effects will still be updated if the entity is off screen if this expression returns anything other than 0.0.",
									"$ref": "../molang/embedded.json"
								},
								"should_update_effects_offscreen": {
									"title": "Should Update Effects Offscreen",
									"description": "Effects will still be updated if the entity is off screen if this expression or 'should_update_bones_and_effects_offscreen' returns anything other than 0.0.",
									"$ref": "../molang/embedded.json"
								}
							}
						},
						"animations": {
							"title": "Animations",
							"type": "object",
							"allOf": [
								{
									"$ref": "../clientAnimation/dynamic/shortNameProperty.json"
								},
								{
									"$ref": "../clientAnimationController/dynamic/shortNameProperty.json"
								},
								{
									"patternProperties": {
										".*": {
											"$ref": "../general/reference/clientAnimation.json"
										}
									}
								}
							]
						},
						"sound_effects": {
							"title": "Sound Effects",
							"description": "Defines the sounds to be played on the attachable.",
							"type": "object",
							"allOf": [
								{
									"$ref": "../soundDefinition/dynamic/shortNameProperty.json"
								},
								{
									"patternProperties": {
										".*": {
											"$ref": "../soundDefinition/dynamic/identifierEnum.json"
										}
									}
								}
							]
						},
						"particle_effects": {
							"title": "Particle Effects",
							"description": "Defines the particles to be played on the attachable.",
							"type": "object",
							"allOf": [
								{
									"$ref": "../particle/dynamic/shortNameProperty.json"
								},
								{
									"patternProperties": {
										".*": {
											"$ref": "../general/reference/identifiers.json#/definitions/particle_identifiers"
										}
									}
								}
							]
						},
						"particle_emitters": {
							"title": "Particle Emitters",
							"description": "Defines the attachable's particle emitters.",
							"allOf": [
								{
									"$ref": "../particle/dynamic/shortNameProperty.json"
								},
								{
									"patternProperties": {
										".*": {
											"$ref": "../general/reference/identifiers.json#/definitions/particle_identifiers"
										}
									}
								}
							]
						},
						"render_controllers": {
							"title": "Render Controllers",
							"description": "References all render controllers used to render the attachable.",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"type": "object",
										"propertyNames": {
											"$ref": "../general/reference/renderController.json"
										},
										"patternProperties": {
											".+": {
												"$ref": "../molang/embedded.json"
											}
										}
									},
									{
										"type": "string",
										"$ref": "../general/reference/renderController.json"
									}
								]
							}
						}
					}
				}
			}
		}
	}
}
