{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"additionalProperties": false,
	"properties": {
		"identifier": {
			"title": "Identifier",
			"$ref": "../../general/reference/prefixedFileIdentifier.json"
		},
		"runtime_identifier": {
			"title": "Runtime Identifiers",
			"$ref": "../../general/reference/identifiers.json#/definitions/entity_identifiers"
		},
		"is_spawnable": {
			"title": "Is Spawnable",
			"description": "Whether this entity should have a spawn egg.",
			"type": "boolean"
		},
		"is_summonable": {
			"title": "Is Summonable",
			"description": "Whether this entity can be summoned with commands.",
			"type": "boolean"
		},
		"is_experimental": {
			"title": "Is Experimental",
			"description": "Whether the entity requires experimental gameplay.",
			"type": "boolean"
		},
		"animations": {
			"title": "Animations",
			"description": "List server animations and animation controllers to be used in this entity.",
			"type": "object",
			"allOf": [
				{
					"$ref": "../../animation/dynamic/shortNameProperty.json"
				},
				{
					"$ref": "../../animationController/dynamic/shortNameProperty.json"
				},
				{
					"patternProperties": {
						".*": {
							"$ref": "../../general/reference/serverAnimation.json"
						}
					}
				}
			]
		},
		"scripts": {
			"title": "Scripts",
			"type": "object",
			"properties": {
				"animate": {
					"title": "Animate",
					"description": "Animations to run on this entity.",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "../dynamic/currentContext/animationEnum.json"
							},
							{
								"type": "object",
								"propertyNames": {
									"$ref": "../dynamic/currentContext/animationEnum.json"
								},
								"patternProperties": {
									".*": {
										"$ref": "../../molang/embedded.json"
									}
								}
							}
						]
					}
				}
			}
		},
		"aliases": {
			"title": "Aliases",
			"type": "object",
			"patternProperties": {
				".*": {
					"$ref": "../dynamic/currentContext/propertyForAlias.json"
				}
			}
		},
		"properties": {
			"title": "Properties",
			"type": "object",
			"patternProperties": {
				".*": {
					"type": "object",
					"required": ["type"],
					"properties": {
						"type": {
							"title": "Type",
							"description": "The data type of the property.",
							"type": "string",
							"enum": ["int", "float", "bool", "enum"]
						}
					},
					"oneOf": [
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "bool"
								},
								"client_sync": {
									"title": "Client Sync",
									"description": "Defaults to false, allows the property to be queried on the client.",
									"type": "boolean",
									"default": false
								},
								"default": {
									"title": "Default",
									"description": "The default value of the property, supports a boolean value or a molang string.",
									"$ref": "../../molang/embedded.json"
								}
							}
						},
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "int"
								},
								"client_sync": {
									"title": "Client Sync",
									"description": "Defaults to false, allows the property to be queried on the client.",
									"type": "boolean",
									"default": false
								},
								"default": {
									"title": "Default",
									"description": "The default value of the property, supports an integer value or a molang string.",
									"$ref": "../../molang/embedded.json"
								},
								"range": {
									"title": "Range",
									"description": "The range of values of the property.",
									"type": "array",
									"items": {
										"type": "integer"
									},
									"minItems": 2,
									"maxItems": 2
								}
							}
						},
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "float"
								},
								"client_sync": {
									"title": "Client Sync",
									"description": "Defaults to false, allows the property to be queried on the client.",
									"type": "boolean",
									"default": false
								},
								"default": {
									"title": "Default",
									"description": "The default value of the property, supports a float value or a molang string.",
									"$ref": "../../molang/embedded.json"
								},
								"range": {
									"title": "Range",
									"description": "The range of values of the property.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"minItems": 2,
									"maxItems": 2
								}
							}
						},
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "enum"
								},
								"client_sync": {
									"title": "Client Sync",
									"description": "Defaults to false, allows the property to be queried on the client.",
									"type": "boolean",
									"default": false
								},
								"default": {
									"title": "Default",
									"description": "The default value of the property, supports an enum value or a molang string.",
									"$ref": "../../molang/embedded.json"
								},
								"values": {
									"title": "Values",
									"description": "The enum values of the property.",
									"type": "array",
									"items": {
										"type": "string"
									},
									"minItems": 1
								}
							}
						}
					]
				}
			}
		},
		"spawn_category": {
			"title": "Spawn Category",
			"type": "string",
			"enum": [
				"ambient",
				"axolotls",
				"creature",
				"monster",
				"water_ambient"
			]
		}
	}
}
